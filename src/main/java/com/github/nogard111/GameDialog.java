package com.github.nogard111;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class GameDialog extends JDialog implements GameNotifications {
  private JPanel contentPane;
  private JButton buttonCancel;
  private BoardDrawPanel boardDrawPanel;
  private JLabel score;
  private JLabel currentMessage;

  private final IGameEngine game;

  public GameDialog(IGameEngine game) {
    this.game = game;
    setupUI();
    setContentPane(contentPane);
    setModal(true);

    var gameDialog = this;
    gameDialog.addWindowListener(new WindowListener() {

      @Override
      public void windowOpened(WindowEvent e) {
        game.onStart(gameDialog);
      }

      @Override
      public void windowClosing(WindowEvent e) {

      }

      @Override
      public void windowClosed(WindowEvent e) {

      }

      @Override
      public void windowIconified(WindowEvent e) {

      }

      @Override
      public void windowDeiconified(WindowEvent e) {

      }

      @Override
      public void windowActivated(WindowEvent e) {

      }

      @Override
      public void windowDeactivated(WindowEvent e) {

      }
    });
    buttonCancel.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
        onCancel();
      }
    });

    // call onCancel() when cross is clicked
    setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    addWindowListener(new WindowAdapter() {
      public void windowClosing(WindowEvent e) {
        onCancel();
      }
    });

    // call onCancel() on ESCAPE
    contentPane.registerKeyboardAction(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
        onCancel();
      }
    }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  }


  private void onOK() {
    // add your code here
    dispose();
  }

  private void onCancel() {
    // add your code here if necessary
    dispose();
  }

  private void createUIComponents() {

    boardDrawPanel = new BoardDrawPanel(game);
  }

  public void Finish() {
    onOK();
  }

  @Override
  public void displayMessage(final String message) {
    currentMessage.setText(message);
  }

  @Override
  public void displayScore(final String message) {
    score.setText(message);
  }

  @Override
  public void showWinnerMessage(final String winnerMessage) {
    JOptionPane.showMessageDialog(this, winnerMessage);
  }

  @Override
  public void showFinalWinnerAndClose(final String winnerMessage) {
    JOptionPane.showMessageDialog(this, winnerMessage);
    Finish();
  }

  /**
   * Method generated by Me because IntelliJ IDEA GUI Designer Have issues !
   *
   * @noinspection ALL
   */
  private void setupUI() {
    createUIComponents();
    contentPane = new JPanel(new BorderLayout());

    var bottomPanel = new JPanel(new BorderLayout());

    buttonCancel = new JButton();
    buttonCancel.setText("I dont care ! Quit");
    currentMessage = new JLabel();
    currentMessage.setText("Label");
    score = new JLabel();
    score.setText("Label");

    var messagePanel = new JPanel(new BorderLayout());
    messagePanel.add(currentMessage, BorderLayout.EAST);
    messagePanel.add(score, BorderLayout.WEST);

    bottomPanel.add(buttonCancel, BorderLayout.EAST);
    bottomPanel.add(messagePanel, BorderLayout.CENTER);


    contentPane.add(bottomPanel, BorderLayout.SOUTH);
    contentPane.add(boardDrawPanel, BorderLayout.CENTER);
  }
}
